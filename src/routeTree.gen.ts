/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as DashboardVehiclesIndexRouteImport } from './routes/dashboard/vehicles/index'
import { Route as DashboardUsersIndexRouteImport } from './routes/dashboard/users/index'
import { Route as DashboardVehiclesVehicleIdRouteImport } from './routes/dashboard/vehicles/$vehicleId'
import { Route as DashboardUsersCreateRouteImport } from './routes/dashboard/users/create'
import { Route as DashboardVehiclesCreateIndexRouteImport } from './routes/dashboard/vehicles/create/index'
import { Route as DashboardVehiclesEditVehicleIdRouteImport } from './routes/dashboard/vehicles/edit/$vehicleId'
import { Route as DashboardVehiclesCreateManualRouteImport } from './routes/dashboard/vehicles/create/manual'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardVehiclesIndexRoute = DashboardVehiclesIndexRouteImport.update({
  id: '/dashboard/vehicles/',
  path: '/dashboard/vehicles/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardUsersIndexRoute = DashboardUsersIndexRouteImport.update({
  id: '/dashboard/users/',
  path: '/dashboard/users/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardVehiclesVehicleIdRoute =
  DashboardVehiclesVehicleIdRouteImport.update({
    id: '/dashboard/vehicles/$vehicleId',
    path: '/dashboard/vehicles/$vehicleId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardUsersCreateRoute = DashboardUsersCreateRouteImport.update({
  id: '/dashboard/users/create',
  path: '/dashboard/users/create',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardVehiclesCreateIndexRoute =
  DashboardVehiclesCreateIndexRouteImport.update({
    id: '/dashboard/vehicles/create/',
    path: '/dashboard/vehicles/create/',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardVehiclesEditVehicleIdRoute =
  DashboardVehiclesEditVehicleIdRouteImport.update({
    id: '/dashboard/vehicles/edit/$vehicleId',
    path: '/dashboard/vehicles/edit/$vehicleId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardVehiclesCreateManualRoute =
  DashboardVehiclesCreateManualRouteImport.update({
    id: '/dashboard/vehicles/create/manual',
    path: '/dashboard/vehicles/create/manual',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dashboard/users/create': typeof DashboardUsersCreateRoute
  '/dashboard/vehicles/$vehicleId': typeof DashboardVehiclesVehicleIdRoute
  '/dashboard/users': typeof DashboardUsersIndexRoute
  '/dashboard/vehicles': typeof DashboardVehiclesIndexRoute
  '/dashboard/vehicles/create/manual': typeof DashboardVehiclesCreateManualRoute
  '/dashboard/vehicles/edit/$vehicleId': typeof DashboardVehiclesEditVehicleIdRoute
  '/dashboard/vehicles/create': typeof DashboardVehiclesCreateIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dashboard/users/create': typeof DashboardUsersCreateRoute
  '/dashboard/vehicles/$vehicleId': typeof DashboardVehiclesVehicleIdRoute
  '/dashboard/users': typeof DashboardUsersIndexRoute
  '/dashboard/vehicles': typeof DashboardVehiclesIndexRoute
  '/dashboard/vehicles/create/manual': typeof DashboardVehiclesCreateManualRoute
  '/dashboard/vehicles/edit/$vehicleId': typeof DashboardVehiclesEditVehicleIdRoute
  '/dashboard/vehicles/create': typeof DashboardVehiclesCreateIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dashboard/users/create': typeof DashboardUsersCreateRoute
  '/dashboard/vehicles/$vehicleId': typeof DashboardVehiclesVehicleIdRoute
  '/dashboard/users/': typeof DashboardUsersIndexRoute
  '/dashboard/vehicles/': typeof DashboardVehiclesIndexRoute
  '/dashboard/vehicles/create/manual': typeof DashboardVehiclesCreateManualRoute
  '/dashboard/vehicles/edit/$vehicleId': typeof DashboardVehiclesEditVehicleIdRoute
  '/dashboard/vehicles/create/': typeof DashboardVehiclesCreateIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/login'
    | '/auth/signup'
    | '/dashboard/users/create'
    | '/dashboard/vehicles/$vehicleId'
    | '/dashboard/users'
    | '/dashboard/vehicles'
    | '/dashboard/vehicles/create/manual'
    | '/dashboard/vehicles/edit/$vehicleId'
    | '/dashboard/vehicles/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/auth/signup'
    | '/dashboard/users/create'
    | '/dashboard/vehicles/$vehicleId'
    | '/dashboard/users'
    | '/dashboard/vehicles'
    | '/dashboard/vehicles/create/manual'
    | '/dashboard/vehicles/edit/$vehicleId'
    | '/dashboard/vehicles/create'
  id:
    | '__root__'
    | '/'
    | '/auth/login'
    | '/auth/signup'
    | '/dashboard/users/create'
    | '/dashboard/vehicles/$vehicleId'
    | '/dashboard/users/'
    | '/dashboard/vehicles/'
    | '/dashboard/vehicles/create/manual'
    | '/dashboard/vehicles/edit/$vehicleId'
    | '/dashboard/vehicles/create/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  DashboardUsersCreateRoute: typeof DashboardUsersCreateRoute
  DashboardVehiclesVehicleIdRoute: typeof DashboardVehiclesVehicleIdRoute
  DashboardUsersIndexRoute: typeof DashboardUsersIndexRoute
  DashboardVehiclesIndexRoute: typeof DashboardVehiclesIndexRoute
  DashboardVehiclesCreateManualRoute: typeof DashboardVehiclesCreateManualRoute
  DashboardVehiclesEditVehicleIdRoute: typeof DashboardVehiclesEditVehicleIdRoute
  DashboardVehiclesCreateIndexRoute: typeof DashboardVehiclesCreateIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/vehicles/': {
      id: '/dashboard/vehicles/'
      path: '/dashboard/vehicles'
      fullPath: '/dashboard/vehicles'
      preLoaderRoute: typeof DashboardVehiclesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/users/': {
      id: '/dashboard/users/'
      path: '/dashboard/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof DashboardUsersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/vehicles/$vehicleId': {
      id: '/dashboard/vehicles/$vehicleId'
      path: '/dashboard/vehicles/$vehicleId'
      fullPath: '/dashboard/vehicles/$vehicleId'
      preLoaderRoute: typeof DashboardVehiclesVehicleIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/users/create': {
      id: '/dashboard/users/create'
      path: '/dashboard/users/create'
      fullPath: '/dashboard/users/create'
      preLoaderRoute: typeof DashboardUsersCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/vehicles/create/': {
      id: '/dashboard/vehicles/create/'
      path: '/dashboard/vehicles/create'
      fullPath: '/dashboard/vehicles/create'
      preLoaderRoute: typeof DashboardVehiclesCreateIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/vehicles/edit/$vehicleId': {
      id: '/dashboard/vehicles/edit/$vehicleId'
      path: '/dashboard/vehicles/edit/$vehicleId'
      fullPath: '/dashboard/vehicles/edit/$vehicleId'
      preLoaderRoute: typeof DashboardVehiclesEditVehicleIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/vehicles/create/manual': {
      id: '/dashboard/vehicles/create/manual'
      path: '/dashboard/vehicles/create/manual'
      fullPath: '/dashboard/vehicles/create/manual'
      preLoaderRoute: typeof DashboardVehiclesCreateManualRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  DashboardUsersCreateRoute: DashboardUsersCreateRoute,
  DashboardVehiclesVehicleIdRoute: DashboardVehiclesVehicleIdRoute,
  DashboardUsersIndexRoute: DashboardUsersIndexRoute,
  DashboardVehiclesIndexRoute: DashboardVehiclesIndexRoute,
  DashboardVehiclesCreateManualRoute: DashboardVehiclesCreateManualRoute,
  DashboardVehiclesEditVehicleIdRoute: DashboardVehiclesEditVehicleIdRoute,
  DashboardVehiclesCreateIndexRoute: DashboardVehiclesCreateIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
